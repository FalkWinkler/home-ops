---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 65539
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      paperless:       
        annotations:
          reloader.stakater.com/auto: "true"
        # pod:
        #   securityContext:
        #     supplementalGroups:
        #       - 1003 # apps-rw

        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.13.5
            env:
              # Configure application
              PAPERLESS_URL: https://dms.${SECRET_DOMAIN}
              PAPERLESS_PORT: "8000"
              PAPERLESS_TIME_ZONE: "Europe/Berlin"
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"

              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /data/nas/consume
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/local/media

              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_FILENAME_FORMAT: '{correspondent}/{created_year}/{document_type}/{created}-{title}'
              PAPERLESS_FILENAME_DATE_ORDER: YMD
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: deu
              PAPERLESS_OCR_LANGUAGE: deu+eng
              # Configure Barcodes
              PAPERLESS_CONSUMER_ENABLE_BARCODES: "true"
              PAPERLESS_CONSUMER_BARCODE_TIFF_SUPPORT: "true"         

              # Configure redis integration
              PAPERLESS_REDIS: redis://redis.database.svc.cluster.local

              # tika   
              PAPERLESS_TIKA_ENABLED: "true"
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998

              # Configure user permissions
              # USERMAP_UID: "1003" # truenas user group id
              # USERMAP_GID: "1003" # truenas user group id
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
          gotenburg:    
            image:
              repository: ghcr.io/mchestr/gotenberg
              tag: 8.17.1
            env:
              - name: DISABLE_GOOGLE_CHROME
                value: "1"

          tika:            
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
            resources:
              requests:
                cpu: 11m
                memory: 1812M
              limits:
                memory: 1812M

    service:
      app:
        controller: paperless
        ports:
          http:
            port: 8000

    ingress:
      app:
        enabled: true
        className: "internal"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:note-multiple"
        hosts:
          - host: &host "dms.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app                  
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        existingClaim: "paperless-data"
        advancedMounts:
          paperless:
            app:
              - path: /data/local

      nas-consume:
        enabled: true       
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/SSD/scan
        globalMounts:
          - path: /data/nas/consume

      nas-export:
        enabled: true      
        type: nfs
        server: "${LOCAL_LAN_TRUENAS}"
        path: /mnt/Volume1/document/export
        globalMounts:
          - path: /data/nas/export
