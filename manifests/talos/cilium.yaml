---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZGdCMVV6eW1hZm5kM1c0SGwrbHVKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJd01ETTBNVEkyV2hjTk1qWXdOVEU1TURNMApNVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREhYaVhOK29ZZWE4NkJGYUxKN2krblJ6dHFQTFFoVVppRXRCZklWQUsyQXhmRE9lM0EKZUorN2xjVU5zc25ZRzU3N1BPUyszVk5RRThwUzhCNWZFRkVJMEtzZXdrUW04NmtubERLRHlQaExOS1A2VkRIcgpsbTJudnY5WmxIUktNL1B0SHQvVDBXdlNrM2lGWUhudjNjK0Z5MEtkM0gzd3pkM3A0VElpTXRIMXJZU3lCOGFrCnB1cmpoclJlcnVqUG1UQzJEaGhzYzZOK0JoUHFnSWZ3L0pHRVdNZXprVTJwdmo3YWttWFZzTjdBSUgvb1czVjEKVGZrT3JkUHZWMER2UjY1U1pDeWFyUFFyMWQ5NWd6NEl4ekZqSUsrT0RpcDJyMTFBZnphWCtKRnVzdGEybjVEdQpubjBYZWpwMXJVUnRoa0g4S1FzK3JQaHRpSWFMNlFCdStmVVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsUDlLQXJwUjJIcG9yOGFKNE1Kdkx1SGlRcnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRVMzcXNaVHZOSU4rR21rYUVUdFpxcUhGbG15T2Raa3JPT3FSZUs3Q1BHTjRwL0NJTDQzU2lkCklhYXNVRDhpQzh5bFFrWmpPbzQ2bGdrMGZjY0I0eFdiZExEVm9nVkJlU0NPQVlYT05jWnZHNThyd3BLaXhJYncKZ1YwVFIweXd4OGxicExhc2QzOXFPcHp2aGxyTndLZjAwcks5SDBaMVNHYUFVQ2tWSXF2YVlKU282a1BadVV3bgpNTjFOeXVYOEh6bGFSYnNWcG1rbFYybkNmRFArTktvRzhhczBDOGwvRTRIaWt2YmFhd2xmWG9Ua0Njemg0a3ljCmpjZkg3VVRISHoramc1bDIyb2VjYUJzblAxSnYwOG9Yai9WWlVnWDlRR2VLWnJpUDhxRFJxVk1SbEszRWIzR24Kc24ralFyOHE3YTQzZzlzRUhadGltZFFNODRCNEJJST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDE0bHpmcUdIbXZPZ1JXaXllNHZwMGM3YWp5MElWR1loTFFYeUZRQ3RnTVh3em50CndIaWZ1NVhGRGJMSjJCdWUrenprdnQxVFVCUEtVdkFlWHhCUkNOQ3JIc0pFSnZPcEo1UXlnOGo0U3pTaitsUXgKNjVadHA3Ny9XWlIwU2pQejdSN2YwOUZyMHBONGhXQjU3OTNQaGN0Q25keDk4TTNkNmVFeUlqTFI5YTJFc2dmRwpwS2JxNDRhMFhxN296NWt3dGc0WWJIT2pmZ1lUNm9DSDhQeVJoRmpIczVGTnFiNCsycEpsMWJEZXdDQi82RnQxCmRVMzVEcTNUNzFkQTcwZXVVbVFzbXF6MEs5WGZlWU0rQ01jeFl5Q3ZqZzRxZHE5ZFFIODJsL2lSYnJMV3RwK1EKN3A1OUYzbzZkYTFFYllaQi9Da0xQcXo0YllpR2kra0Fidm4xRHdJREFRQUJBb0lCQUNiOHNrZmxoZlROQUVVZQpCZ2VYSEpxSnc0U3kra2JKdmhtMVhqRSt2SWo3Y2RvcnFlTEpzL0xyQnUzMjJLSDZSTXk4eTc3SGFWTnZpMUZNCnc2T3pmU1ZNS1NxS3N1a3JIUmt3VWZDVGpIcW9nS2lqYmwrenV4M2lxK3pJcXpVWGs4djdEYXBPZWRka0gxMTEKMEdLbjdiMHNVb3FzWTdTRGpiSCs1OTdvTVVicG4zTjl1Ym9CckRFL2RmVE53U2pjSS9UQU1XTmU5eW5zb2kvRwphTG0zdS85c29jUVF3UjlLcXFVOWJ0Sld6RWdZTzVZbXRyYWwyVzd0QzN2dGhPcTM0UnVQNlRaNWNJNzFRSkxUCmVYdllGTWdIUlBuNkhqZ3Z5WExCSHYwOWVZRHFKRi9JVGpxUmhNUWF2UFpGdGZHZngyOTl4djhGWEtsYnRZbGkKcStTSm9nRUNnWUVBMjBUdW94cU04cmF1VW5RKzUvaVp6b21ENWZ4SVRYSmx2MGxqeksxQm00bGY5dWhQL1pxTAplR3d6TnB1R0xyK1RDQUxENWxkNXUzUDFmWjlqYU91UHN1SGdzRThpRCtjMVh2ckpTYnhQcWZwcE9SUWdmRmFCCjhWVGNLWEoydGFJQ05qZ1dhRGN6Mnh4M3MzcjNFZlpSY2FLeTNvbWJzb0VKQjY3NFcxWllMUEVDZ1lFQTZNUEUKTGtCZG1kV3VYdlJGWUpaK0FrYXFDTkdqNzBhdE1UbTFwbnp0KzVjVmprMmFEdHdsZVJiMW9wdUlXNlpWeU1tOQpwM1YzMzkyMDd1YnhsdmlZdnFXTUJQVGd1VVliNElpTm1vRXJjNWQxQzdSdTlHUkt5c3FCeHkvT0c4QjQ2U282ClFlaFNDV3N6RmRJUnJhOVhlQ2QvOCtIaVlNdTdTRzNmNjVWOFFmOENnWUJNZXVldHRsWVJWb3pKTDhpOVNxWUQKTjAzdFN5akE4clR3bXAyWHg1ckpzSW5yYWk1MGE1SllKNDFaYjdmRzJJVmxWdW1UajFGamc5Zk53R21CTUNESQpLU2NnK0FrT2VQdlJyREhIYVVwMEpHYk5ST3JyMDVTeFk0TURaZXhvQUNFN1hpYmFwTjZPZjRoMDd0Lzh3T2k1CmRTRmtvNlRPQjFucDl5cWpXU09hVVFLQmdEdjczejJ3RnE4RE14bURSN0c1ZHFXdGdqb2RsR3FnUXhleGNJK0UKR0d4Q3BpcHk4eVdyTS9qOW9yV1I4VlQxQzV4ZjZRRVRzNTI4YTlrNUtMOG9OMnpDQ3RCb0x0VndMTlR6TzlLNgpRUEZiOGF6ZmhjeHpZQmJja3c4NjBabXpReldMVFZJWXhiTnByZE9NdkVPUE1USmtzNE90RFlLMlhnQXZXSXBFCmpxNFBBb0dCQUlhc1N6VE5ueHFWSHE4MnlWMWUrV25ZUVROQVFrWEpIbkVFSEN4UlpTRG1ZZHEwbS9FOHVzbU0KUWtjQ2FOZy84SkdtNkh0RUxGa0xoemlKSC85clA5WWVieDBVN2tmbjRhcUxxSkc1QjNPOGRIaER5aU1GOHJiOQo1UFFLMnZCd0JoNk5SOHg3NHZETjlpcEtRMFFPMmovUWljdzNFaVJ3Rzg2ZlNJYWNSMnVtCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZGdCMVV6eW1hZm5kM1c0SGwrbHVKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJd01ETTBNVEkyV2hjTk1qWXdOVEU1TURNMApNVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREhYaVhOK29ZZWE4NkJGYUxKN2krblJ6dHFQTFFoVVppRXRCZklWQUsyQXhmRE9lM0EKZUorN2xjVU5zc25ZRzU3N1BPUyszVk5RRThwUzhCNWZFRkVJMEtzZXdrUW04NmtubERLRHlQaExOS1A2VkRIcgpsbTJudnY5WmxIUktNL1B0SHQvVDBXdlNrM2lGWUhudjNjK0Z5MEtkM0gzd3pkM3A0VElpTXRIMXJZU3lCOGFrCnB1cmpoclJlcnVqUG1UQzJEaGhzYzZOK0JoUHFnSWZ3L0pHRVdNZXprVTJwdmo3YWttWFZzTjdBSUgvb1czVjEKVGZrT3JkUHZWMER2UjY1U1pDeWFyUFFyMWQ5NWd6NEl4ekZqSUsrT0RpcDJyMTFBZnphWCtKRnVzdGEybjVEdQpubjBYZWpwMXJVUnRoa0g4S1FzK3JQaHRpSWFMNlFCdStmVVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsUDlLQXJwUjJIcG9yOGFKNE1Kdkx1SGlRcnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRVMzcXNaVHZOSU4rR21rYUVUdFpxcUhGbG15T2Raa3JPT3FSZUs3Q1BHTjRwL0NJTDQzU2lkCklhYXNVRDhpQzh5bFFrWmpPbzQ2bGdrMGZjY0I0eFdiZExEVm9nVkJlU0NPQVlYT05jWnZHNThyd3BLaXhJYncKZ1YwVFIweXd4OGxicExhc2QzOXFPcHp2aGxyTndLZjAwcks5SDBaMVNHYUFVQ2tWSXF2YVlKU282a1BadVV3bgpNTjFOeXVYOEh6bGFSYnNWcG1rbFYybkNmRFArTktvRzhhczBDOGwvRTRIaWt2YmFhd2xmWG9Ua0Njemg0a3ljCmpjZkg3VVRISHoramc1bDIyb2VjYUJzblAxSnYwOG9Yai9WWlVnWDlRR2VLWnJpUDhxRFJxVk1SbEszRWIzR24Kc24ralFyOHE3YTQzZzlzRUhadGltZFFNODRCNEJJST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDE0bHpmcUdIbXZPZ1JXaXllNHZwMGM3YWp5MElWR1loTFFYeUZRQ3RnTVh3em50CndIaWZ1NVhGRGJMSjJCdWUrenprdnQxVFVCUEtVdkFlWHhCUkNOQ3JIc0pFSnZPcEo1UXlnOGo0U3pTaitsUXgKNjVadHA3Ny9XWlIwU2pQejdSN2YwOUZyMHBONGhXQjU3OTNQaGN0Q25keDk4TTNkNmVFeUlqTFI5YTJFc2dmRwpwS2JxNDRhMFhxN296NWt3dGc0WWJIT2pmZ1lUNm9DSDhQeVJoRmpIczVGTnFiNCsycEpsMWJEZXdDQi82RnQxCmRVMzVEcTNUNzFkQTcwZXVVbVFzbXF6MEs5WGZlWU0rQ01jeFl5Q3ZqZzRxZHE5ZFFIODJsL2lSYnJMV3RwK1EKN3A1OUYzbzZkYTFFYllaQi9Da0xQcXo0YllpR2kra0Fidm4xRHdJREFRQUJBb0lCQUNiOHNrZmxoZlROQUVVZQpCZ2VYSEpxSnc0U3kra2JKdmhtMVhqRSt2SWo3Y2RvcnFlTEpzL0xyQnUzMjJLSDZSTXk4eTc3SGFWTnZpMUZNCnc2T3pmU1ZNS1NxS3N1a3JIUmt3VWZDVGpIcW9nS2lqYmwrenV4M2lxK3pJcXpVWGs4djdEYXBPZWRka0gxMTEKMEdLbjdiMHNVb3FzWTdTRGpiSCs1OTdvTVVicG4zTjl1Ym9CckRFL2RmVE53U2pjSS9UQU1XTmU5eW5zb2kvRwphTG0zdS85c29jUVF3UjlLcXFVOWJ0Sld6RWdZTzVZbXRyYWwyVzd0QzN2dGhPcTM0UnVQNlRaNWNJNzFRSkxUCmVYdllGTWdIUlBuNkhqZ3Z5WExCSHYwOWVZRHFKRi9JVGpxUmhNUWF2UFpGdGZHZngyOTl4djhGWEtsYnRZbGkKcStTSm9nRUNnWUVBMjBUdW94cU04cmF1VW5RKzUvaVp6b21ENWZ4SVRYSmx2MGxqeksxQm00bGY5dWhQL1pxTAplR3d6TnB1R0xyK1RDQUxENWxkNXUzUDFmWjlqYU91UHN1SGdzRThpRCtjMVh2ckpTYnhQcWZwcE9SUWdmRmFCCjhWVGNLWEoydGFJQ05qZ1dhRGN6Mnh4M3MzcjNFZlpSY2FLeTNvbWJzb0VKQjY3NFcxWllMUEVDZ1lFQTZNUEUKTGtCZG1kV3VYdlJGWUpaK0FrYXFDTkdqNzBhdE1UbTFwbnp0KzVjVmprMmFEdHdsZVJiMW9wdUlXNlpWeU1tOQpwM1YzMzkyMDd1YnhsdmlZdnFXTUJQVGd1VVliNElpTm1vRXJjNWQxQzdSdTlHUkt5c3FCeHkvT0c4QjQ2U282ClFlaFNDV3N6RmRJUnJhOVhlQ2QvOCtIaVlNdTdTRzNmNjVWOFFmOENnWUJNZXVldHRsWVJWb3pKTDhpOVNxWUQKTjAzdFN5akE4clR3bXAyWHg1ckpzSW5yYWk1MGE1SllKNDFaYjdmRzJJVmxWdW1UajFGamc5Zk53R21CTUNESQpLU2NnK0FrT2VQdlJyREhIYVVwMEpHYk5ST3JyMDVTeFk0TURaZXhvQUNFN1hpYmFwTjZPZjRoMDd0Lzh3T2k1CmRTRmtvNlRPQjFucDl5cWpXU09hVVFLQmdEdjczejJ3RnE4RE14bURSN0c1ZHFXdGdqb2RsR3FnUXhleGNJK0UKR0d4Q3BpcHk4eVdyTS9qOW9yV1I4VlQxQzV4ZjZRRVRzNTI4YTlrNUtMOG9OMnpDQ3RCb0x0VndMTlR6TzlLNgpRUEZiOGF6ZmhjeHpZQmJja3c4NjBabXpReldMVFZJWXhiTnByZE9NdkVPUE1USmtzNE90RFlLMlhnQXZXSXBFCmpxNFBBb0dCQUlhc1N6VE5ueHFWSHE4MnlWMWUrV25ZUVROQVFrWEpIbkVFSEN4UlpTRG1ZZHEwbS9FOHVzbU0KUWtjQ2FOZy84SkdtNkh0RUxGa0xoemlKSC85clA5WWVieDBVN2tmbjRhcUxxSkc1QjNPOGRIaER5aU1GOHJiOQo1UFFLMnZCd0JoNk5SOHg3NHZETjlpcEtRMFFPMmovUWljdzNFaVJ3Rzg2ZlNJYWNSMnVtCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZGdCMVV6eW1hZm5kM1c0SGwrbHVKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJd01ETTBNVEkyV2hjTk1qWXdOVEU1TURNMApNVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREhYaVhOK29ZZWE4NkJGYUxKN2krblJ6dHFQTFFoVVppRXRCZklWQUsyQXhmRE9lM0EKZUorN2xjVU5zc25ZRzU3N1BPUyszVk5RRThwUzhCNWZFRkVJMEtzZXdrUW04NmtubERLRHlQaExOS1A2VkRIcgpsbTJudnY5WmxIUktNL1B0SHQvVDBXdlNrM2lGWUhudjNjK0Z5MEtkM0gzd3pkM3A0VElpTXRIMXJZU3lCOGFrCnB1cmpoclJlcnVqUG1UQzJEaGhzYzZOK0JoUHFnSWZ3L0pHRVdNZXprVTJwdmo3YWttWFZzTjdBSUgvb1czVjEKVGZrT3JkUHZWMER2UjY1U1pDeWFyUFFyMWQ5NWd6NEl4ekZqSUsrT0RpcDJyMTFBZnphWCtKRnVzdGEybjVEdQpubjBYZWpwMXJVUnRoa0g4S1FzK3JQaHRpSWFMNlFCdStmVVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsUDlLQXJwUjJIcG9yOGFKNE1Kdkx1SGlRcnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRVMzcXNaVHZOSU4rR21rYUVUdFpxcUhGbG15T2Raa3JPT3FSZUs3Q1BHTjRwL0NJTDQzU2lkCklhYXNVRDhpQzh5bFFrWmpPbzQ2bGdrMGZjY0I0eFdiZExEVm9nVkJlU0NPQVlYT05jWnZHNThyd3BLaXhJYncKZ1YwVFIweXd4OGxicExhc2QzOXFPcHp2aGxyTndLZjAwcks5SDBaMVNHYUFVQ2tWSXF2YVlKU282a1BadVV3bgpNTjFOeXVYOEh6bGFSYnNWcG1rbFYybkNmRFArTktvRzhhczBDOGwvRTRIaWt2YmFhd2xmWG9Ua0Njemg0a3ljCmpjZkg3VVRISHoramc1bDIyb2VjYUJzblAxSnYwOG9Yai9WWlVnWDlRR2VLWnJpUDhxRFJxVk1SbEszRWIzR24Kc24ralFyOHE3YTQzZzlzRUhadGltZFFNODRCNEJJST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRS2FBSDg2Uy9CNDFrZ0I3cExTeEZMVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJd01ETTBNVEkyV2hjTk1qWXdOVEU1TURNMApNVEkyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDa1lYVFJ6cEM3NU16eGZDMGRSdi9TKzIxRWZRbUYKaGlnbE1GbythQWhST2ZseFYrOEJ3ZjdDZDlFL0I2c2QyQzRCRFRKeHd5a2JuS1hCVjBDSXMzTWRkS3QwZEtUNQpWTEFKL2huK0JYNXdTSFlOU3R3TGhTeEhEc0JIL21MM1ZRNVBMZUExb1Z1OC9JMWNQdFJjNGNBblMrY1ROeUM5CkFLUTMwcVg1R1BrTlhkY2l3K2lWdG5CdDFFVDFHWldrbWJIOGRRVThRb1ozaEZXaTJQL2huaUdVN1NVTWhzN1EKZDdBMlI5ZlRnRHVZcDl5dDhZYVpKZnVhNXZxMHVDeGcxVnZIUk4xVTFBRytqSXB2eEQ2b1UzZVUwd1NHMFljRgo1MjNGMStmR2ROSVdGc3BoS1R3MXdvODZIQmRyTHZUVXcwUm9FTk5mL1F3VHRnSU5VTnFMZ3ZCcEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZKVC9TZ0s2VWRoNmFLL0dpZURDYnk3aAo0a0s3TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYb1lxaTZuNk9sMjdOS0cyaURKRUl2MFZnQnR4UlBPNy91MStwa203OG04eGJZQUkKd2wrcld0STROS2RpcUp2MDBGdEpvREhZbUI4Sk8rYXFITkh0cDNKdnR0Nk1vN1FlU1hLUDEya1JJRDBuK2J2dgo4NDZ0blVSdy8vUXBaZHVqTnZMeWtURXhRamR4YjVPN2Z0ajhGeHhMclFpRHZXUVJxekIrMDFtaVVUMy94T2p2CjQ3b1hCRFJzZXRZbjd4aUFZdS9JYlpjSUw2OHdDOFNsSVdLOURlVzZSQUNvSTh6TTZNaU1ZdFh0M2ZPWUE2c3IKQ3FGQlhDYnlkcm43V0FsNVloOVBxRjJJVWFzUU1Bc2tzcm9XVHhyZkRuNGE3bldyZjIyVWxnYVhHdk84c091eAo2elhjWExscFpNNnlTcjFVbDQxQVBLWWwzWjdtdHVianRDcGZTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBcEdGMDBjNlF1K1RNOFh3dEhVYi8wdnR0UkgwSmhZWW9KVEJhUG1nSVVUbjVjVmZ2CkFjSCt3bmZSUHdlckhkZ3VBUTB5Y2NNcEc1eWx3VmRBaUxOekhYU3JkSFNrK1ZTd0NmNFovZ1YrY0VoMkRVcmMKQzRVc1J3N0FSLzVpOTFVT1R5M2dOYUZidlB5TlhEN1VYT0hBSjB2bkV6Y2d2UUNrTjlLbCtSajVEVjNYSXNQbwpsYlp3YmRSRTlSbVZwSm14L0hVRlBFS0dkNFJWb3RqLzRaNGhsTzBsREliTzBIZXdOa2ZYMDRBN21LZmNyZkdHCm1TWDdtdWI2dExnc1lOVmJ4MFRkVk5RQnZveUtiOFErcUZOM2xOTUVodEdIQmVkdHhkZm54blRTRmhiS1lTazgKTmNLUE9od1hheTcwMU1ORWFCRFRYLzBNRTdZQ0RWRGFpNEx3YVFJREFRQUJBb0lCQVFDVktJbWtSOWcxWnV4QQp3L2o3OUF6M0dZYVEreFRFd0hOMUsyYjM4ZFo2UGkwR21GQWNQRGc3cGhXTktCd3h2SlFpQ0NPWjd3bENNT2FICmhmRGRHbGgraGZ0K2RNbXVKUmFJT3JiRE5hRUJxZjdWR1BTS3o1RForWnlvdDBCK1JnUHgvU0xTQjFVREsvZnAKbUdtQ3pxWmFBaG52NmJvZlJwRzh4Ynd0U0dmVm83amlxVFVnQmp0RzhxUXExV2lDUVR0djdEaXRaT1NqZHZSSQpWMDEvUWdkQ3NXdkM2OEVaNkRDK0cwTGlQQXBxMVRVV285N3dpaFRmM3Zoc3o1ckkrU21QbVdYQ0RLdkdLUEpJCjJUYjE1RmdFM01ucFJCVnhqYWJra0RIRGR0RXNFQm5ZcGxOa3d2VVpqOE95UlArckV0SnhaWEh3WlZZYkNaMVoKRnFTc3JQY3hBb0dCQU10dXRpamUwN3lWUDUxVG5XZlo4NHpCdmlYWWhqUVE1WC9IRzdSb3ZPL2pvdHpEK2crUQpLSENUN004TUc3SG5UNElLNkxaU1E4ZUFvdk1UK04rUm10K3dINDVOSDBSN3RjeEk2a25lVDA3bnd3M2h5cnBYCk9NUDZxNGIrRzFFR05laklrcE1YZ1p6aFRVbEl2ejNxeThqR0FrQ21COFRSWEd4QmFpdFpaZEk3QW9HQkFNN2IKYk9MOTFQKzZBaElCYktyRlk3MkhqR3lpQjBsQmYwN1BZTExQeWFsaGo4bEtETW8vU2I2RGY1OEMzM3N1ZzZCcApDUmw1ZktOREpTZDhFZWNwUk1WZlp4QkVtYkp6enJ2ZS8wbmZybUdRUktTSXNUREZkNlZCWTFseTJtTmhkVTNECnhoM3dLaVBtNWV6bGtDRlVSS3UxWUtTMmN0QlhQUHR1UHNEenExbXJBb0dCQUxPVXB1OUxUUVN6aDdXZFExMlMKMCtHVWdnT3NzVU96Q3JVU2tnMWZUREpEODlnSWxHMDZwOGhCZlJHRk1jbUpWUEdLS2NZUXRzNmRhcnRFRFRWbQp0cDN5UHRrQ2tiQ0Z1SVYrZEh3QzZHWFNSNml3Z3FLZUxua3FobEtqYkgvSkNMdldteldIMFo0b2NXNVk3cUY4CjdLbnV5YnhDRktlVTNZNmU3RmNhRXIxVEFvR0JBSmhrKzVFM1krYUtpTi92QUxuRzlqWTVXSERuNWVwSVFKdzEKRjQ1a21yTVkxeTk2U0hYdnJrcVc0anlwaHk5ZkUwWG9XL1hTbE1wS3UyS2RleXNNTWtnZWd2VnZOTFJOc1M2agptUHc1dUdUVVBsM2cvbmxwNFQxME1OZERVRFVMSmJxRzByeFhwUlFTRmE0emFiM0VNVnMzSXQzMk5CdmRTV1lLCjBGeWlwOGhGQW9HQkFKWjNncEVjNjRjSHRxRElLMURKVnB5ZnVsazhNQmQvVkJISWdnL0Q5ajNDUVFCOURXL1EKYkFWN204UTkvREdpSFAyN1NlNlFlbm1QTGxCcjVJL29EVSthSytKNitTSlBlekFISXpUOUpkUDAvODFWWDZ1Qwp1bG9FV3prdUZvOXJSd0J4bm0xU3kxZ1FySFQ4ZWMxeGM5WlY0eThZSS9tcnp5emsvSnhtd1htWAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZGdCMVV6eW1hZm5kM1c0SGwrbHVKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJd01ETTBNVEkyV2hjTk1qWXdOVEU1TURNMApNVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREhYaVhOK29ZZWE4NkJGYUxKN2krblJ6dHFQTFFoVVppRXRCZklWQUsyQXhmRE9lM0EKZUorN2xjVU5zc25ZRzU3N1BPUyszVk5RRThwUzhCNWZFRkVJMEtzZXdrUW04NmtubERLRHlQaExOS1A2VkRIcgpsbTJudnY5WmxIUktNL1B0SHQvVDBXdlNrM2lGWUhudjNjK0Z5MEtkM0gzd3pkM3A0VElpTXRIMXJZU3lCOGFrCnB1cmpoclJlcnVqUG1UQzJEaGhzYzZOK0JoUHFnSWZ3L0pHRVdNZXprVTJwdmo3YWttWFZzTjdBSUgvb1czVjEKVGZrT3JkUHZWMER2UjY1U1pDeWFyUFFyMWQ5NWd6NEl4ekZqSUsrT0RpcDJyMTFBZnphWCtKRnVzdGEybjVEdQpubjBYZWpwMXJVUnRoa0g4S1FzK3JQaHRpSWFMNlFCdStmVVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsUDlLQXJwUjJIcG9yOGFKNE1Kdkx1SGlRcnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDRVMzcXNaVHZOSU4rR21rYUVUdFpxcUhGbG15T2Raa3JPT3FSZUs3Q1BHTjRwL0NJTDQzU2lkCklhYXNVRDhpQzh5bFFrWmpPbzQ2bGdrMGZjY0I0eFdiZExEVm9nVkJlU0NPQVlYT05jWnZHNThyd3BLaXhJYncKZ1YwVFIweXd4OGxicExhc2QzOXFPcHp2aGxyTndLZjAwcks5SDBaMVNHYUFVQ2tWSXF2YVlKU282a1BadVV3bgpNTjFOeXVYOEh6bGFSYnNWcG1rbFYybkNmRFArTktvRzhhczBDOGwvRTRIaWt2YmFhd2xmWG9Ua0Njemg0a3ljCmpjZkg3VVRISHoramc1bDIyb2VjYUJzblAxSnYwOG9Yai9WWlVnWDlRR2VLWnJpUDhxRFJxVk1SbEszRWIzR24Kc24ralFyOHE3YTQzZzlzRUhadGltZFFNODRCNEJJST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUwxMDU4a3dOMjhxK0E3TzY4ZVJ2dG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU1EQXpOREV5TmxvWERUSTJNRFV4T1RBegpOREV5Tmxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1hbTU0ZGVOVXlZRlRCZWsyckQKNkZ2Rk9LclJRYlI0WjNVVWFJZjJjTE5mL0hzRGpaN1VkaWR4b1M4NVArZ1c0U2I5K29QZjI0d3dhNjJuY21GaQpuWW4rV05rYkN6aWU2dWcwSEVDR3dDOHFhWmdjdzRrSnpKN0ZYSi9NN0huRlRHWWpxNEp4dEhzK01RUEV4OWVoCjU5Tk9wY0czcVdBUmVCRTRxcHZoKzJjeExYN3NneEhzZ1lVMll0NTNzakl1QjJkMTRHSjdmMHM3eFBuc0hSQk4KRUo2ZU5rV1hoSmZqZDdIejlyUVF6Sm44Z3F5YjJhYXJBQ0EvejJKWkRkSTlRblVkU0xRZzlqMGZJL2pUMlJ6RAo5Wnc3V2ZHdUhwcVJ3emJSNG92MDB3VmFoVGFESDFzelc2cUlrSUdXazFiNXI0bWZXQ21pYzZGNExKWE55QVYrCm9FVUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWxQOUtBcnBSMkhwbwpyOGFKNE1Kdkx1SGlRcnN3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWtmR1RKTFkxcStzRG53Vk5JbWNGYW1LcXNIK3YKNUtMNnFaekQ3azZBZHhSSEJYU1hhSW8yS2pQclVmaEVrTUsxdkVVRjJFZ1RHRnFEVUg2d3I2dHNMb1FTS0hpTApqS2hFbG9QRE50c05GRDdwVS82cXE0L1Y5ZW92V0xBTVJubU5zQzN2ZUJ5SGFCTVp1OXhDZmt6OURSWGsxcGg0Cm5iaXRGVysvT1F5U01HRWNrK2Y2NVIwU3phSjlWUndodGt3UTFRYmdWbS9NZTEyUUlvU1pUQnVIU21ONkF4ZDUKR2xjYWJCM0I4d2VBTkQvcyt1ZXdqRzJidE4zRnRWOTFnZUlyMTZRQjlaenJ1eUl2NXEyMk9sYlFZdklOeU9GRgpVUjl1enhNbXl3V3FHMnFQNDl5dVgwRVBkTVI4NmtVay9tdmMwaTVWM1V4VmdkWGsrTDhoVVJuSGZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeHFibmgxNDFUSmdWTUY2VGFzUG9XOFU0cXRGQnRIaG5kUlJvaC9ad3MxLzhld09OCm50UjJKM0doTHprLzZCYmhKdjM2ZzkvYmpEQnJyYWR5WVdLZGlmNVkyUnNMT0o3cTZEUWNRSWJBTHlwcG1CekQKaVFuTW5zVmNuOHpzZWNWTVppT3JnbkcwZXo0eEE4VEgxNkhuMDA2bHdiZXBZQkY0RVRpcW0rSDdaekV0ZnV5RApFZXlCaFRaaTNuZXlNaTRIWjNYZ1ludC9TenZFK2V3ZEVFMFFucDQyUlplRWwrTjNzZlAydEJETW1meUNySnZaCnBxc0FJRC9QWWxrTjBqMUNkUjFJdENEMlBSOGorTlBaSE1QMW5EdFo4YTRlbXBIRE50SGlpL1RUQlZxRk5vTWYKV3pOYnFvaVFnWmFUVnZtdmlaOVlLYUp6b1hnc2xjM0lCWDZnUlFJREFRQUJBb0lCQUJIeHdiaFlxamZoQlFqNQpnaGVDMnRwdlZrOFgxL2VWYU1NS3RPYVRQRnIzc0xicit6NzlzaTZkOVJGdStuYmNtam9MZHpXeVl3S20zUk15CnJRSmZCaHdRL2JXZTI4U2hsbGFqWG1uMXdpYUFqa2xQVDlweEtDcXZhVTZHRkZacm5Cc2QzY0JLeFNMYzIxQ2IKMWZHRWpveG43bEV4WmZ0bm1KRDFyWE9uVmk1YitnSzJxK3A3bXFjVXZpWW1jZW1ZRGllVXFFblBKQnVNYk1jMQpETTRTN3FWY095NXVkNDFBeXhSeXJZc3FGK0pBOS9HSWJadDV3R1pqaFN6ejZJZVpsa3FwU2FVc3NVK1FSMjNBCmlVWFh1VjRQRVBiT3BuYzVobGp4N3dsWktKMGk3Rm9zOSt3WG8yY2JzajBiMURmN1dpaEhIYXQxKzBzekp0MWsKSnphc2RBRUNnWUVBODc3ZklQcVFUazcxbUNtOHlETDBFUzVoSmgwYjV2dVF5T3lwZlB0dE9rTldHeWxzNkNrUwpNeG9GbnMzUG9JU1oxVU0zbFBWc1czNStCWEFzc1JwK2FHdEhBNnZLK0ZxMEFtVW1XRTgzei95VlBvNWNMVlRMCnd0ZzRUZkxJRzJ3d0w5eCsyUUkybHV3MTFxckdZdEFqaEdQeFJscEkwR0twcXZCRU4xRmlWQzBDZ1lFQTBLT24KdS95K09nUEZhSzJjMEdVeUJCT1k0bmVQYlBPZmplSklyY2pIRWpGTU85d1lYUGJDWUx3Qm9WVlJwVktVdnBuTwoyMXNod3hHc2lESWdYT2w0WHJLdFF3WDhkUTAvUFZaeVkzZTFzZFBlTVVaRy9YajVUbkpPZ3RBcjhNREwwMmJDCmRGQURCSE9qUmVtVDhBUVdiQWN1Z1JmWFJSalI0R21PNXJqTGsza0NnWUJ0aDlZb3NhL3JJSnhJVm1rWTVaeTcKbzhYUUpNQ0hHWURFYVdUNFh0dUVsUUc2anZEN21va3RJWUpwREQ5QytKTlFQRFpiMzdWam9BSHRXNjBab0xneApJQlAzV0ZtTEpPZERORVQ0NWhCRWpGSmNuQWhiN29EcCs5UEJZMW44eUs4V3N0VGxtNU1BV3dFT2lBdENHQm45CndoT0g4OFpJcmkxa1BUZktTKzROdVFLQmdDRURaRTBvcHVrREk3OTJpVE9vYjR1WmxqMXZjYkJwdER0OUxNYmkKMkMwV3c5dE03a1gzZmJaVXlXVS8zTlZ1QmI5TEV5SStmMDhnZ3M1aU1DRERpSnBqWjJzTmpXN3dFNnVlL0NhbApFSWo4MzFHb3J4NzRmMnBjUi9RSEFJenQxTkswbGR4VnRNU0ZqN1pHU1hSWEVUMHl2YmNMa0xLTVJObGZtbzhECmVxTHhBb0dBYmRUUHJWWWoxSnVxQm5rRU5YVSt1RzJUTEg4L2VtWG5RbEVTZDcweGtSdGRVdFJ0dGVLNWMzSFIKVVV1eGdqRTZUZ1FMb0ozcEZSWS9sSTd1dnF1R0dXcWdwT1hSV0pQVlVCU1krQWpBL1gyR2RoVWFOR1pseWhMNworM1NUNXlMeWlvVFZLcTlRNVAxc0JHczU2RytnQktuQ3JVYXd0ZHA2OG5UWWFEOE51WXM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "true"
  ipv4-native-routing-cidr: 10.244.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.cilium.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: cilium
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9e4969dee000741ba3274b45426a9e60a7b6632e96f5959316ce63eb189307d4"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: cilium
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9e4969dee000741ba3274b45426a9e60a7b6632e96f5959316ce63eb189307d4"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
