apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-bgp-control-plane-secrets
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-bgp-control-plane-secrets
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bgp-secrets-namespace: kube-system
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: main
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: ${CLUSTER_CIDR}
  k8s-client-burst: "20"
  k8s-client-qps: "10"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: main\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtsVmRYRFo0VUZYeW02UkxxcmJFUDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05ERTNORFUwTVZvWERUSTNNREl3TXpFMwpORFUwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzeFpRdWpnOWMxWTFzOU95a0YyWEFtRmh4ZjAzallYdEZkSjJqZ1FoTXczSW1pTVkKK1VyQVFFOGVudnJJb25IYXhTeU1Sa20xTVQ1YXFpM2RpaTlOczgvRnVDckEycnFpeURHZTdHWkw0WHVlTFZoaAp2RFJ0MGdlQWZXM2ZFSEZtRlUwajV2MVFYQi9kMWtUbzNBMHlJV3FmMUlqemdWV0pMK3FFK29qWG01cWpuSTdVCkYzUkUzVXFZVm1WemVVVWh1SFFnYlRYaWVJQUtRSkVXM3dtNUJuTTlSTnErUHIvOGV2UjZ2cEpIcUkrNWIrbngKNDRxcFllWUlGeWlrYndhK1ljaVorTDdBZUVXZmNGWTZZZGFiNkFUVjI0T3phNkJlcXNaaTc4S2NvWmRGM0tHSApKYWJHU2N5UHNLYWNVYVRJT25kcVBGOWN5bzh3NnU3VWFwZ2ZZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQW9nTU1QTEFtRUVEekRYemZtTi9nV0VwbElmTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2liOWVydTJ0YzRCcXY1MXZxQ1Z0Z1VST1AwMUQ1RG9aRXRYU0t1bW1idVlJWTRZVVRpUWpmClp5Wk5KZ0w0YVR2eHZWSkZkbGZqNHFYZE95elZtMk5BM3N6V3l1eGIxeDR0Y3lXalgzY1Fwa0wxa1R5T2d4aXIKQXlRSmZOYWxnWUs1T1JZR1gzZTZydkJER2NKTmdNZHpBTHhPOXgrQ3BaQjlWQkp2aTIzZ2JLcDhHSnJDaFMxVQpGcmtuTDRRQXUxL2M0T25ISm5HSDNKRW5MOTJuR1Z0bHdkTkU2YTNORDJ0K0s2eGoxSy9TcTBiUmIvV0VpTEFEClhuZHpBVzBMQ3JYMnpxT2hrVXZVVEVtbWNVd3o2RlhZcExkVnd2U29pL2hlRmpMRnpKczNQa3V2Mld3OFo4elAKOEMzcDF1MllDNWpTeVJiN3N4ak1ybTFLWjRIOGxxNWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3haUXVqZzljMVkxczlPeWtGMlhBbUZoeGYwM2pZWHRGZEoyamdRaE13M0ltaU1ZCitVckFRRThlbnZySW9uSGF4U3lNUmttMU1UNWFxaTNkaWk5TnM4L0Z1Q3JBMnJxaXlER2U3R1pMNFh1ZUxWaGgKdkRSdDBnZUFmVzNmRUhGbUZVMGo1djFRWEIvZDFrVG8zQTB5SVdxZjFJanpnVldKTCtxRStvalhtNXFqbkk3VQpGM1JFM1VxWVZtVnplVVVodUhRZ2JUWGllSUFLUUpFVzN3bTVCbk05Uk5xK1ByLzhldlI2dnBKSHFJKzViK254CjQ0cXBZZVlJRnlpa2J3YStZY2laK0w3QWVFV2ZjRlk2WWRhYjZBVFYyNE96YTZCZXFzWmk3OEtjb1pkRjNLR0gKSmFiR1NjeVBzS2FjVWFUSU9uZHFQRjljeW84dzZ1N1VhcGdmWVFJREFRQUJBb0lCQUd5MmtqWjlhNnpHQ1R1Tgo0WW1xb2dsZDdXaXZnaC9zY09IZWd6bW4xNG5xb0tSRWtFb0QzSFk2V0VDL0U0RGVITzlUU3pTQmZOUDNmL1ZJCmpwcGxmT2N3VERqNFZLMENvSXNRYTFMbWN2bjU1TlpTS0thdm9nams4UCt1eURKYUlKWW0xbVVkY3NqQ0dyZnQKTXREeGVVbUJqVXZrUlUzMG9mc0F2VGJkOHJ2M2tkaVJncmlDZEE0SWRIdG1aUTJFUld2VWVhNEVrS08wL3dDUApUQStjVm1MWi9id1hWWkpoS0dxZGo3ZGlEblZuZmFSK2E5eXFvUjNGYW1kOUhBRVFJQ0JKSzA4ODBhSDZMYTIxClJ5R0FNeVlUUmpWODhSUUxQengvNFhPcWgyV1RNak5ZM2lYQ3pXYlA0SVNlTzhCWExiV1haeGF6K1k2c01YaWkKaUdWMUV3VUNnWUVBNS8yV2dvMXI5elNzandYc2Q1ZVR4OHBXWmx0WlVOSzk0LytKMTRMNWdWRklFdVgwN1pqaApreEcvcC9PQU10bUlUdWRDMFFXQWhVcm5wSVl5bWIxdHZyRjl5bWpxNE1hTGVQZTVqRlB5ZmxPTU1yUmJMSTNQCkIyT2tsU25nRDZGejlwMitYL3M1VCswZ0ZPdGh2aHQ5dGFuTWY0aFpxMSs2dmhURkZ3aUJua2NDZ1lFQTlpelcKcEZOMXFIdEl0RXJJU2RYMmpWR0paQVpBdG54Z053Yk9xc214Sm9VMUNVZm9iRUNuMjZWSzlkakJZVElHTnFHNQp4enZ5MVRRTDhUUzBEMWR0VmRiR0RIUlhLbEtqTUJVOW9VdC9hb1Z3TWNXS2VhSHQ0Z1JjRWlhM082WEZjbEYvCjJYclJlVlM0U0wrR0VMOFdOd1hSUURiM3IvZ2lVaHdKWFNFMllSY0NnWUJBRnIxU3ViRCs3UTFTd2FjdTdyQUQKdkxFYnU5YXp6bFJwUFRvZVVHK1BPeDQzSWxJRXBYeUR2WjU5em5ZM0ZnTmpFTjVUa2pxTUdFSmdJRGF3WkRXQwpQZFJyYTRxZnFCbjF4REg5UTErMWFHMU53S2VEYW5Xc0srbld6MmUzeWJtWWdzR0tFSVFud1hGZ2RocGRnNGk1CisvdWpxODVoMnFOalNhZWRFbHVFbHdLQmdRRGEyaHZzTlFKWnlWaG1hRUZOV3ZsNHd5OG9qR0tGbVdjVUpHb2cKN1hRZk1iZG55OVMyUUhpNlRXV3AwSXlDc3kxUTdsQXg3bnJBemlkN3hZWDZTWmc3QXRoSkJEamx1RmU1akhpZwo1M1NjSjRzSnhIdUtETXBsNzhoR25zS3hOWHVtV1F3WE5SZjdETFZVZjJoWmhQZmo3TGtOcEpCb2tXazVwQkV6CkNTN0Yrd0tCZ1FDOEV2b2hETnBKQnVUVW41KzlPOGJ3ZkhOblRHQzNLY1A1OHVZYUw1NjJiRkhLb1VrblFRbCsKQ2lTdDY4RE9YZzJwVGppdTUzeUR1cmdIbUtKYnBrZHN1dVdEa1o1OURWVk8xUS9BeHJpVmZXYzlvQkM3eDA4NwpHNWN6NVQxVUU3Y1dFd3ljTzdBTEhJK3A2Wm5XTGZYVDJ0VjVpTXd0cmJrRDVFNHFhdkFxaXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtsVmRYRFo0VUZYeW02UkxxcmJFUDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05ERTNORFUwTVZvWERUSTNNREl3TXpFMwpORFUwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzeFpRdWpnOWMxWTFzOU95a0YyWEFtRmh4ZjAzallYdEZkSjJqZ1FoTXczSW1pTVkKK1VyQVFFOGVudnJJb25IYXhTeU1Sa20xTVQ1YXFpM2RpaTlOczgvRnVDckEycnFpeURHZTdHWkw0WHVlTFZoaAp2RFJ0MGdlQWZXM2ZFSEZtRlUwajV2MVFYQi9kMWtUbzNBMHlJV3FmMUlqemdWV0pMK3FFK29qWG01cWpuSTdVCkYzUkUzVXFZVm1WemVVVWh1SFFnYlRYaWVJQUtRSkVXM3dtNUJuTTlSTnErUHIvOGV2UjZ2cEpIcUkrNWIrbngKNDRxcFllWUlGeWlrYndhK1ljaVorTDdBZUVXZmNGWTZZZGFiNkFUVjI0T3phNkJlcXNaaTc4S2NvWmRGM0tHSApKYWJHU2N5UHNLYWNVYVRJT25kcVBGOWN5bzh3NnU3VWFwZ2ZZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQW9nTU1QTEFtRUVEekRYemZtTi9nV0VwbElmTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2liOWVydTJ0YzRCcXY1MXZxQ1Z0Z1VST1AwMUQ1RG9aRXRYU0t1bW1idVlJWTRZVVRpUWpmClp5Wk5KZ0w0YVR2eHZWSkZkbGZqNHFYZE95elZtMk5BM3N6V3l1eGIxeDR0Y3lXalgzY1Fwa0wxa1R5T2d4aXIKQXlRSmZOYWxnWUs1T1JZR1gzZTZydkJER2NKTmdNZHpBTHhPOXgrQ3BaQjlWQkp2aTIzZ2JLcDhHSnJDaFMxVQpGcmtuTDRRQXUxL2M0T25ISm5HSDNKRW5MOTJuR1Z0bHdkTkU2YTNORDJ0K0s2eGoxSy9TcTBiUmIvV0VpTEFEClhuZHpBVzBMQ3JYMnpxT2hrVXZVVEVtbWNVd3o2RlhZcExkVnd2U29pL2hlRmpMRnpKczNQa3V2Mld3OFo4elAKOEMzcDF1MllDNWpTeVJiN3N4ak1ybTFLWjRIOGxxNWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVHhjTytXRGxBcCtQYmpmWm5Fd01NekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpBME1UYzBOVFF5V2hjTk1qY3dNakF6TVRjMApOVFF5V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETGtFZHN3eFNxM0JpQWN6KzQzUVVXdGUwaTBwSXQKYmFCREZaYUhuM1BxOUZxejdVUWpPNkdxajlCVzJ6N3RwRHhreTBaYXNqdlU0aFRGcytPNXliMlEyMVZnNWhUdwpoczh5S0E2SHVnM1JiazNMT0FpUUM1cG1wK09PR2FmNmFvOFJ0TDJXOU1QWkdDRXNwTHg5bTdmcDlFSklWY2hSCnB6WkhRZmdYRjZOSUFOMDh5SVRVMHpsY3NSekg3T3l2TzVGRzN1MGZ0a0w4eUk1SlZKTTRyVkRVK3RwRFBpQjcKRHNxQ3REclcvMHViaUJlMGVtVFFyL2IzMUZmU0RBNnZSUFdENmxDZ1JUb3ErcnhmMURSbkc4M2xLajN2cHVpQwpLUnpYaXAzdGVDaTJ0Y1NDZnYyRlFuVmYwRGlsMk1mQjd4YjR2c2Z1T00vQVVtbUpVRnNDVGxkRkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBb2dNTVBMQW1FRUR6RFh6Zm1OL2dXRQpwbElmTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUEyVnUxcUVZWkw2RkczR0lTdXgvUmFQV2VJS2NYL3Y3YjN4MUhCVU1jQzFTT3MwOG4KcGZIOEk0b3VkT1BrUkJGdVJsemFULzR0L2w2cjJzc1g1UUduMUYvMjZNTUZ4N1lYT3Qybkl1MVRubHJvNHRobgpZK3Q3UTU0NU1yVlBHUkpvK0NRekdpZ3N5NThZdUtHK3NUbTZCdHJZbUUyWCtwUnpYb295MEZmOTBsMVB2MjRICmxTRTI1VjhBUllsVlNMQnJwRThPNHRwek5CVzlGTmZrbVluUHFTQThOUmExY2tyOTZic2hQMlRTWkZhMWxSYkwKNHFxUnRFNU1QdnovSE1UbVpaSHhpWE54WmV6WVhSejhmNkRhcmplZjhLaEh4aHlFdUN4Ky9YY2xObUZoUXkwSApIOXhXWkIwNkl2ODdtNjlnKy9scnJwQzhuK2NOczd3WXdqc2Zsdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTVCSGJNTVVxdHdZZ0hNL3VOMEZGclh0SXRLU0xXMmdReFdXaDU5ejZ2UmFzKzFFCkl6dWhxby9RVnRzKzdhUThaTXRHV3JJNzFPSVV4YlBqdWNtOWtOdFZZT1lVOEliUE1pZ09oN29OMFc1Tnl6Z0kKa0F1YVpxZmpqaG1uK21xUEViUzlsdlREMlJnaExLUzhmWnUzNmZSQ1NGWElVYWMyUjBINEZ4ZWpTQURkUE1pRQoxTk01WExFY3grenNyenVSUnQ3dEg3WkMvTWlPU1ZTVE9LMVExUHJhUXo0Z2V3N0tnclE2MXY5TG00Z1h0SHBrCjBLLzI5OVJYMGd3T3IwVDFnK3BRb0VVNkt2cThYOVEwWnh2TjVTbzk3NmJvZ2lrYzE0cWQ3WGdvdHJYRWduNzkKaFVKMVg5QTRwZGpId2U4VytMN0g3ampQd0ZKcGlWQmJBazVYUlFJREFRQUJBb0lCQUZCa1NIRGhraFh3R2hVUQpic2Y1TVh0SW1jQTQzTlhvQjNTMjM5M3IwUUduUXZMdjd3cmpEL09tSENkUktzYjdKNGErNktnRTM3QXhJUGI3CkZpSlhVL0FUVHVLWHV3bEtsQ1ZBd0l4RnBCTmp0b0ZkUGJSMWdLS3VCeVlsWjd0enZkREdTbUdGaEpzRjlvUUYKQXhPd0hhL2RjUmZVR09wMldPOUhWRXo2WHRlZUcxaDBlRDNuSXhZWDE0STdWcEtJM3N4MXl1NEYzZzNhODNsMgpJVU5WcnZvMlNVRUg3ZTRzTSszRVB2Z0t6eFVxOTBQNkVYZWhpZWx5ZEFwZmVqMm1ERXl2VTRLWURXRE1maEJMCkxoS0wyK3lLMy9uSkdUNE03ZUdRcU1sN1p5U1VmVElaWW5nWVFmYkQxcFlQMy9NckoybGg2bjdVS0UwakE3T0kKZFQ1UVhQa0NnWUVBN0FnSFNQRDlBNjFsSVRIdm5MdXBYYzBXb2Q4c2NQdUxZMHR4UWllbWtmbDB5OWRvL2V6UQpndjI0N1orRk85MExDVm0rYU9Rek5aZXBodkVuRjJQL3hYTTRhUjArbEVNbk5MNWFyS0lDU0JnOFZLSW1LSzF3CjF4UVlNMFc2cWR4YXc4SkpCdTFBTlRuUFJRQUpBRzU0K2QxbHViRWRlWHhsVG5tTitFZ0NhR2NDZ1lFQTNNa1EKSGphU1U5d3NWZG5RWEFVUVlMbFdIaWFZbmRlYmcrMk5SdmFSZm5mRkZseFB5MURNZmVhVnNZeHhiT1h1K2hHSApBMTFrdnBPZDZjYWwrVWZuaWpSMjg2aW41R09HWkJNWE9zTE9QMFg4NFpuWjVhU1dtcVM5WXlMN0VpdWFxZllECktFQ0JZN1RmTmIyYTNJV29TNHpENWw3VUsyeWY3WEJMV1dJSVozTUNnWUVBcFZEaU9WYUJBQ2hjWXFtbEYvUGcKcGxCVS83OWVVeXY3N3VvU1E3R2QyelFMZUJKQitVZjZxeVNtZDloNDZ2cmhGZ1dEZGRnUGZnUGh1eUFBcjBOZApDNkN0N0FHTnFTNTNzVnQ2Q3R2V0dVVFFUTDdkVnpSVGluRUttaTdHbE40L3ZFakIrVllHMk1ES3ladENzc2l0CmR1UjRzVnk2TmpMSWlmUmRXWDZtSVJVQ2dZQndqT3J6aS94Q1ZjNGdJYjV1K29IajNQZEN2WWcxaHRFWGl3VG4KTlJEc2VKLzNDeTMrUm4xSWZVQzRWeEVIWTV2VXpSU1hxWWVQQTIrUDJoMklHNWkwUXBTVkY5Z212SG1wRUhaYQpGUzdRNEp2T1lnRExhWUVBNnBSRk1uTHRTMTgzMzFxeXJWZUlmWThBTlZ6NXFBVW9KbVZEVGZvNC9OSDJWN1dCCnBsRUVjd0tCZ1FDaWtFY2VMUUhTV1dTeFRIdXArY0lSNTFwZE84Q2YrTHZPNUQzVlh2TEdKQ3lOY0gxd3NXOEsKY2xvalpkVFZ2bVZ1VVdsUE5OZERpRG5FWitoc09kMUM3bityNWZhRVRaTXdpTFZ2Q0hid2JqekJQdmRSTFZERAozN1N6NnRzQkloMmw0RXdTcGM5QWRQUm9rSTNDalRiMDcyMFltMFJJbklSRUhQWjIzRFRqbVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtsVmRYRFo0VUZYeW02UkxxcmJFUDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05ERTNORFUwTVZvWERUSTNNREl3TXpFMwpORFUwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzeFpRdWpnOWMxWTFzOU95a0YyWEFtRmh4ZjAzallYdEZkSjJqZ1FoTXczSW1pTVkKK1VyQVFFOGVudnJJb25IYXhTeU1Sa20xTVQ1YXFpM2RpaTlOczgvRnVDckEycnFpeURHZTdHWkw0WHVlTFZoaAp2RFJ0MGdlQWZXM2ZFSEZtRlUwajV2MVFYQi9kMWtUbzNBMHlJV3FmMUlqemdWV0pMK3FFK29qWG01cWpuSTdVCkYzUkUzVXFZVm1WemVVVWh1SFFnYlRYaWVJQUtRSkVXM3dtNUJuTTlSTnErUHIvOGV2UjZ2cEpIcUkrNWIrbngKNDRxcFllWUlGeWlrYndhK1ljaVorTDdBZUVXZmNGWTZZZGFiNkFUVjI0T3phNkJlcXNaaTc4S2NvWmRGM0tHSApKYWJHU2N5UHNLYWNVYVRJT25kcVBGOWN5bzh3NnU3VWFwZ2ZZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQW9nTU1QTEFtRUVEekRYemZtTi9nV0VwbElmTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2liOWVydTJ0YzRCcXY1MXZxQ1Z0Z1VST1AwMUQ1RG9aRXRYU0t1bW1idVlJWTRZVVRpUWpmClp5Wk5KZ0w0YVR2eHZWSkZkbGZqNHFYZE95elZtMk5BM3N6V3l1eGIxeDR0Y3lXalgzY1Fwa0wxa1R5T2d4aXIKQXlRSmZOYWxnWUs1T1JZR1gzZTZydkJER2NKTmdNZHpBTHhPOXgrQ3BaQjlWQkp2aTIzZ2JLcDhHSnJDaFMxVQpGcmtuTDRRQXUxL2M0T25ISm5HSDNKRW5MOTJuR1Z0bHdkTkU2YTNORDJ0K0s2eGoxSy9TcTBiUmIvV0VpTEFEClhuZHpBVzBMQ3JYMnpxT2hrVXZVVEVtbWNVd3o2RlhZcExkVnd2U29pL2hlRmpMRnpKczNQa3V2Mld3OFo4elAKOEMzcDF1MllDNWpTeVJiN3N4ak1ybTFLWjRIOGxxNWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lSQVA1NlBnMkxlUUZGZmRkYlMzWWlZV2N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05ERTNORFUwTVZvWERUSTNNREl3TXpFMwpORFUwTVZvd0p6RWxNQ01HQTFVRUF3d2NLaTV0WVdsdUxtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSytDVzNZOHF0dmJ2aml5M1NYSmRNWXIKS1BQMnhFZGJnZUZuNThnbXk1cjNlZFcyT3JFRmVmelBzR2czbWN6b3lCcDhwVE5aanBHSnFSeUlJV1JtSVVZSApaRkkvMkhzNUpZOTBDZ1VhTExJdHkzQzQyQ29hdHFEOXkwM0N2d3dqR2x6Q2U2ejJ0QkpaNENaYnltYUZCWExMCjRRWVpFSGhZSHovZ25CeGFHdEtOUkNydjRDcmFjWWxndjRaaEpHYlZpTHJJNSticG1wSnlFdzkwcDBnMDR0UlQKT0NBRHZhT2NJajF5ays1Y1dGaWIzMEFzNEVqMkNKWEd3ZUZjNVpsUXRtSHBZbm9Ma0djblFzMExVSFp4bUlhdQpoaktIaEN3cFBvWnYxdzlDRnJtcXhCc3AveUdsbnZzVHZqNW8zZUErYlJzRU5pOHM2QVR5L3lsWDVlajRWcjBDCkF3RUFBYU9CaWpDQmh6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVQ2lBd3c4c0NZUVFQTU5mTgorWTMrQllTbVVoOHdKd1lEVlIwUkJDQXdIb0ljS2k1dFlXbHVMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnM2ZmaUpYSzIxMmpuMTJLSEo3Yk5CeTFOaWlBbDY5L05Nc1cKSE1COW1pV1I0c0VkZzloaTdrWW5QZFRoTUV1dEEyamZhakF1OXlGKzV3VlBFYzdOeEE1NThtN0dwVzk5U2hidQpXc3pZQ2tMY2NKL1lWd2JnME5LcW1EdzBwaVROUmYzMGNRWW9GUDRSR3ZCb2pwQTZxYUl0MzFTMDN4M1VGVmM4CjBBei9XQTVXWERuWVBoMmFvSFg1ZFpJNDdsWGl2RjN1RHZnYWxtNWNMMkN5SE1QVytUVElJYjFnM1duRWhnNE4KaVNCLzJaMFNqZFlBakFKdHBnN0RVWnI4c2RROC9NMndkYXJLVXRMT0dFL2h3dXhwQXpFbCtIckVERHdvYXBJagpkKzFkUkx0MWRrWG5Da3Q5aXJnclBid1FxZWhoZGtKWGJlQVVaUHFxVndSZ1pxNnkzUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjRKYmRqeXEyOXUrT0xMZEpjbDB4aXNvOC9iRVIxdUI0V2ZueUNiTG12ZDUxYlk2CnNRVjUvTSt3YURlWnpPaklHbnlsTTFtT2tZbXBISWdoWkdZaFJnZGtVai9ZZXprbGozUUtCUm9zc2kzTGNMalkKS2hxMm9QM0xUY0svRENNYVhNSjdyUGEwRWxuZ0psdktab1VGY3N2aEJoa1FlRmdmUCtDY0hGb2EwbzFFS3UvZwpLdHB4aVdDL2htRWtadFdJdXNqbjV1bWFrbklURDNTblNEVGkxRk00SUFPOW81d2lQWEtUN2x4WVdKdmZRQ3pnClNQWUlsY2JCNFZ6bG1WQzJZZWxpZWd1UVp5ZEN6UXRRZG5HWWhxNkdNb2VFTENrK2htL1hEMElXdWFyRUd5bi8KSWFXZSt4TytQbWpkNEQ1dEd3UTJMeXpvQlBML0tWZmw2UGhXdlFJREFRQUJBb0lCQUN1MTZaVis4b2FqS2JMeApTUWFhTDgwUy9yWVQ1VHBvWGVhSGZFQnErUloxUUJDcnU5NU9vTjBIMU1WLzQzd1hGWThUTUFtajZrL3cydjlTCklBN2pLTEpLTVFBVENwVlYzRGJvRFg3TDBBbm9RZHluREo4ZjNCQW9aVFBPcHNvZEMvbkNMZzhidWlrLzNRVncKb3UzNWZ5dmgvdjhIeXdSTjNpcUloQmpEa0I2VHlvUDJCOWJRN1NyWnpIcklubG5aRzBZVVJJTlFjOXBSSEpWRQpYcE9FbTNkOTNhVVhEVW9IaktJdGU4UFd4dHF5N2UxOFFHbHp2SkJUdWMvVk5UejZxZWJURkNCU1dnRk9MckZnCkJadGkwZkdXVlhGbGNyN0Fxa3FReFN1am5GRElNQmUzVnMyTGNHYzhCTXFWWENFSXVTaDZJdU9WREppT3lheXkKS3ZIREtEa0NnWUVBMzdSK3Z0UnJPMyt0ckFwMVhaNVphUEl6REEzMzRkQ200SHc2cXg4UC9lRjZKQ3h6anFGNQpiRFlLOXRzakhKb2FYQ3piWm96SmZTamJkODlMVGM1Q3hIT3JIQUVoY1owQWZML0syWnhEWkIzd2xwV0lscE5RCnJlSGZIRm5rS05qWjR2TjNFeS9NYkJQc3lkcHcyRlBTSW9PcDU0ZzZmOU40Z1dyR01yajhaa2NDZ1lFQXlOaXUKSFRjTnY2L3dRVzRaL3dVWkEwZzdXY3loN3NzUVVmQVlKQUF3ZkQwRG1KZzg3TlcwVUc0U212UGdzelJVaFB1QgpzTnJCazd5M2IwZmhwUThvVC9OZlVxOGt2a1lHQmxWTFpZUEF4Uk5DQTNGSkJNNkc3V0Y3ZnpJVG5oSHVja3l4CkNBbUhLNlZ0bUxqQmplNzRXWUQvZVRGSXF3dlFlQnNzQ2lTQWFOc0NnWUFQN1UvZzBrcllMNXp6MU1MS2FZM0EKRlE1aFcxVTh0SmhNLzB0R0I2NGh5ejNnK1hFNHhISmFxL1pYNFA0OCtSUExZRDQyck90amg5Y29Uby96K0MxMAp3eTk1alBNT25iajlLTUtPZjd1a2t5VWY4NEdJQnZFRmtFRk1TWElmSG1GVThUU1hIeDRVeTg1ZUNMbGtEWU8yCmhWMUJhTWVSZGtMc0krZjhrSU1YM1FLQmdCMndxa3gzVHZqL01TejY4YXpaUEJGWUpDM3FLaVg2cnJidUh5TnoKUTdlWjdXWXBXeGhIbnhna3JXdHFrZFRyNzNLWkcxcmhlNnd6UVlxWnZhbUF6QnpGaFZuYnVqckdieTJRZmt6TApaVHU4MVExZE9jWVVJYTRGc3hQaWV6UHF3cXp5MlZpdXorU0wxOSt6c0NrakltTll4bXRMOWNvVFBRWUVQa1poCmp2bnhBb0dCQUtGbnJENFZxVEQwb3FkY2RoNFYyOExoendTK0dFZWtObzJNNlh6RGpVK2JwWjAvcDVNcGphTHEKa3FndHlKTE8wNWdOWDNjVzNGV0ViQlVhNmxhcThXb2pMNlhPQkNkUGhDTlN5R0pueUJOYmJheVpwVjZpbkpWTgppQ2IxeEtWc01YclV4S09oMzE4bVJ2MDd4WFVtd0R1WjJ2YnpxZHVremhVVTZpRm10b0tlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5e5c153b51492a0d8028acf54f68079b7281838ebf0a6c55a8abb6a92b80da18
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/managed-by: Helm
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.0@sha256:e26ecd316e742e4c8aa1e302ba8b577c2d37d114583d6c4cdd2b638493546a79
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 41cbe00c4bbc40addfb50fd000b9d7db525c667bd1134a65e2ab1d88af1bbb18
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/managed-by: Helm
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.0@sha256:45b3ea70b73aee01644f800b8f6138c36446bfb130d2b88b0f75775ebe6a9ab6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.3@sha256:e6b825302fc1e406b1305363fe0bcd1fdf95730b32c2b99a2b36dfa37bdaeec2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.3@sha256:1cd84251cec46e20f9e839ee0afba9b51c8de59d35681234f701d7f42062f138
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5e5c153b51492a0d8028acf54f68079b7281838ebf0a6c55a8abb6a92b80da18
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
